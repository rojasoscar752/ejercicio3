services:
  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: always
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080" # Dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

  api:
    image: my-api-image
    container_name: api_service
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.localhost`)"
      - "traefik.http.services.api.loadbalancer.server.port=5000"

  postgres:
    image: postgres:latest
    container_name: db_postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.postgres.rule=HostSNI(`postgresql.localhost`)"
      - "traefik.tcp.services.postgres.loadbalancer.server.port=5432"
    networks:
      - internal

networks:
  internal:
    driver: bridge
version: '3.8'

services:
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:80"
    depends_on:
      - app1
      - app2
      - app3

  app1:
    build: ./app
    environment:
      - INSTANCE_NAME=app1

  app2:
    build: ./app
    environment:
      - INSTANCE_NAME=app2

  app3:
    build: ./app
    environment:
      - INSTANCE_NAME=app3

